{
  "name": "nconf-redis",
  "description": "A Redis store for nconf",
  "version": "0.3.1",
  "author": {
    "name": "Charlie Robbins",
    "email": "charlie.robbins@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/indexzero/nconf-redis.git"
  },
  "keywords": [
    "configuration",
    "key value store",
    "nconf",
    "redis"
  ],
  "dependencies": {
    "async": "0.1.x",
    "redis": "0.7.x"
  },
  "devDependencies": {
    "nconf": "0.5.x",
    "vows": "0.6.x"
  },
  "main": "./lib/nconf-redis",
  "scripts": {
    "test": "vows test/*-test.js --spec"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# nconf-redis\n\nA Redis store for [nconf][0]\n\n## Installation\n\n### Installing npm (node package manager)\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing nconf-redis\n``` bash\n  $ [sudo] npm install nconf\n  $ [sudo] npm install nconf-redis\n```\n\n## Motivation\n`tldr;?`: To break the [nconf][0] codebase into small modules that work together.\n\n## Usage\nThe store provided by `nconf-redis` will persist all of your configuration settings to a Redis server. All calls to `.get()`, `.set()`, `.clear()`, `.reset()` are asynchronous taking an additional callback parameter.\n\nThe Redis engine also has an in-memory cache with a default TTL of one hour. To change this, just pass the `ttl` option to `.use()`.\n\n``` js\n  var nconf = require('nconf');\n  \n  //\n  // Requiring `nconf-redis` will extend the `nconf`\n  // module.\n  //\n  require('nconf-redis');\n  \n  nconf.use('redis', { host: 'localhost', port: 6379, ttl: 60 * 60 * 1000, db: 0 });\n```\n\n#### Author: [Charlie Robbins](http://www.nodejitsu.com)\n\n[0]: https://github.com/indexzero/nconf",
  "readmeFilename": "README.md",
  "_id": "nconf-redis@0.3.1",
  "dist": {
    "shasum": "117b76bbb04fbeb6ebc7d3a7caba9f48678e5519"
  },
  "_from": "nconf-redis"
}
